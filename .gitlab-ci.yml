stages:
  - update
  - test
  - build
  - deploy

default:
  image: "cirrusci/flutter:latest"

update_flutter:
  stage: update
  script:
    - flutter clean
    - flutter pub get
  interruptible: true

unit_test:
  stage: test
  script:
    - flutter test test/unit_test
  interruptible: true

widget_test:
  stage: test
  script:
    - flutter test test/widget_test
  interruptible: true

code_quality:
  stage: test
  before_script:
    - dart pub get
    - dart pub global activate dart_code_metrics
  script:
    - mkdir reports
    - dart pub global run dart_code_metrics:metrics analyze lib -r gitlab > reports/code-quality-report.json
  artifacts:
    expire_in: 1 day
    reports:
      codequality: reports/code-quality-report.json
    paths:
      - reports/

android_build:
  stage: build
  script:
    - flutter build apk
    - mkdir android_build
    - cp build/app/outputs/apk/release/app-release.apk android_build/app-release.apk
  artifacts:
    expire_in: 1 hrs
    paths:
      - android_build/app-release.apk
  interruptible: true

deploy_android_for_testing:
  image: "node:latest"
  stage: deploy
  dependencies:
    - android_build
  script:
    - npm install -g firebase-tools
    - firebase appdistribution:distribute android_build/app-release.apk --app "$FIREBASE_APP_ID" --release-notes release-notes.txt --groups "androidTesters" --token "$FIREBASE_CI_TOKEN"
  only:
    - main

deploy_android_for_stagging:
  image: "note:latest"
  stage: deploy
  dependencies:
    - android_build
  script:
    - npm install -g appcenter-cli
    - appcenter login --token $APPCENTER_API_TOKEN
    - appcenter distribute release -f android_build/app-release.apk -g Collaborators --app usmanshabir/EasyNote
  only:
    - main